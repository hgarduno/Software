#############################################################################
# Makefile for building: ClienteEnvioProtocolo
# Generated by qmake (1.07a) (Qt 3.3.8) on: Tue Dec 23 11:33:37 2014
# Project:  ClienteEnvioProtocolo.pro
# Template: app
# Command: $(QMAKE) -o Makefile ClienteEnvioProtocolo.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++-4.2.4
LEX      = flex
YACC     = yacc
CFLAGS   = -march=nocona -O2 -pipe -fomit-frame-pointer -g  
CXXFLAGS = -march=nocona -O2 -pipe -fomit-frame-pointer -g  
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/local/hgarduno/Qt-3.3.8/mkspecs/default -I. -I../H -I$(HOME)/SiscomDesarrollo4++/H
LINK     = g++-4.2.4
LFLAGS   = 
LIBS     = $(SUBLIBS)  -L$(HOME)/SiscomComunicaciones++ -L$(HOME)/SiscomDesarrollo4++ -lSiscomComunicaciones++ -lSiscomDesarrollo4++
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = O/

####### Files

HEADERS = 
SOURCES = ../CPP/ClienteEnvioProtocolo.cpp
OBJECTS = O/ClienteEnvioProtocolo.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = ClienteEnvioProtocolo.pro
QMAKE_TARGET = ClienteEnvioProtocolo
DESTDIR  = 
TARGET   = ClienteEnvioProtocolo

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: ClienteEnvioProtocolo.pro  /usr/local/hgarduno/Qt-3.3.8/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile ClienteEnvioProtocolo.pro
qmake: 
	@$(QMAKE) -o Makefile ClienteEnvioProtocolo.pro

dist: 
	@mkdir -p O/ClienteEnvioProtocolo && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) O/ClienteEnvioProtocolo/ && ( cd `dirname O/ClienteEnvioProtocolo` && $(TAR) ClienteEnvioProtocolo.tar ClienteEnvioProtocolo && $(GZIP) ClienteEnvioProtocolo.tar ) && $(MOVE) `dirname O/ClienteEnvioProtocolo`/ClienteEnvioProtocolo.tar.gz . && $(DEL_FILE) -r O/ClienteEnvioProtocolo

mocclean:
uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

O/ClienteEnvioProtocolo.o: ../CPP/ClienteEnvioProtocolo.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o O/ClienteEnvioProtocolo.o ../CPP/ClienteEnvioProtocolo.cpp

####### Install

install:  

uninstall:  

